version: '3.8'

services:
  postgres-command:
    image: postgres:latest
    container_name: command-user
    restart: always
    environment:
      POSTGRES_USER: furkan
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: commanduser
    ports:
      - "5432:5432"
    volumes:
      - postgres_command_data:/var/lib/postgresql/data
    networks:
      - redis-network

  postgres-query:
    image: postgres:latest
    container_name: query-user
    restart: always
    environment:
      POSTGRES_USER: furkan
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: queryuser
    ports:
      - "5433:5432"
    volumes:
      - postgres_query_data:/var/lib/postgresql/data
    networks:
      - redis-network

  postgres-package-command:
    image: postgres:latest
    container_name: package-command
    restart: always
    environment:
      POSTGRES_USER: furkan
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: packagecommand
    ports:
      - "5434:5432"
    volumes:
      - postgres_package_command_data:/var/lib/postgresql/data
    networks:
      - redis-network

  extrapackage:
    image: postgres:latest
    container_name: extrapackage
    restart: always
    environment:
      POSTGRES_USER: furkan
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: extrapackage
    ports:
      - "5435:5432"
    volumes:
      - postgres_extrapackage_data:/var/lib/postgresql/data
    networks:
      - redis-network

  extrafeatures:
    image: postgres:latest
    container_name: extrafeatures
    restart: always
    environment:
      POSTGRES_USER: furkan
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: extrafeatures
    ports:
      - "5436:5432"
    volumes:
      - postgres_extrafeatures_data:/var/lib/postgresql/data
    networks:
      - redis-network

  shakewin:
    image: postgres:latest
    container_name: shakewin
    restart: always
    environment:
      POSTGRES_USER: furkan
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: shakewin
    ports:
      - "5437:5432"
    volumes:
      - postgres_shakewin_data:/var/lib/postgresql/data
    networks:
      - redis-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - redis-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - redis-network

  mongodb:
    image: mongo:latest
    container_name: package-query-mongodb
    restart: always
    environment:
      MONGO_INITDB_DATABASE: packagequerydb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - redis-network

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - redis-network

  # API Gateway servisini ekleyin - bağımlılıklar olmadan
  api-gateway:
    image: nginx:latest  # Basit bir gateway için Nginx kullanabilirsiniz
    container_name: api-gateway
    restart: always
    ports:
      - "80:80"  # Dış dünyaya açılan port
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Nginx konfigürasyonu için
    # depends_on kısmını kaldırdık çünkü servisler henüz tanımlı değil
    networks:
      - redis-network

volumes:
  postgres_command_data:
  postgres_query_data:
  postgres_package_command_data:
  postgres_extrapackage_data:
  postgres_extrafeatures_data:
  postgres_shakewin_data:
  mongodb_data:
  redis_data:

networks:
  redis-network:
    driver: bridge